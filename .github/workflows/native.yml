name: Native

on:
  workflow_dispatch:
  pull_request:
    branches: ['develop']
    paths:
      - .github/workflows/native.yml
      - .cargo/**
      - ./src-tauri/**
  push:
    branches: ['develop']
    paths:
      - .github/workflows/native.yml
      - .cargo/**
      - ./src-tauri/**

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Install webkit2gtk (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0
      - name: Run linter
        working-directory: ./src-tauri
        run: cargo clippy
  
  create-release:
    needs: [lint]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Get package.json version
        id: version
        # Обрезаем версию по бокам на один символ, тк npm pkg get version возвращает строку
        run: VERSION_STR=$(npm pkg get version) && echo "VERSION=${VERSION_STR:1:-1}" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: true

  linux-release:
    needs: [create-release]
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Install webkit2gtk (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
      - name: Install dependencies
        run: pnpm i
      - name: Run build
        run: npx tauri build
      - name: Upload deb package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINUX_BUILD_DEB_PATH: ./src-tauri/target/release/bundle/deb
          # TODO: версию из прошлой джобы
          LINUX_BUILD_DEB_NAME: memories-calendar_1.0.0_amd64.deb
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.LINUX_BUILD_DEB_PATH }}/${{ env.LINUX_BUILD_DEB_NAME }}
          asset_name: ${{ env.LINUX_BUILD_DEB_NAME }}
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload app image
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINUX_BUILD_APPIMAGE_PATH: ./src-tauri/target/release/bundle/appimage
          LINUX_BUILD_APPIMAGE_NAME: memories-calendar_1.0.0_amd64.AppImage
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.LINUX_BUILD_APPIMAGE_PATH }}/${{ env.LINUX_BUILD_APPIMAGE_NAME }}
          asset_name: ${{ env.LINUX_BUILD_APPIMAGE_NAME }}
          asset_content_type: application/x-executable

  windows-release:
    needs: [create-release]
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
      - name: Install dependencies
        run: pnpm i
      - name: Run build
        run: npx tauri build
      - name: Upload msi image
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WINDOWS_BUILD_MSI_PATH: ./src-tauri/target/release/bundle/msi
          # TODO: версию из прошлой джобы
          WINDOWS_BUILD_MSI_NAME: Memories Calendar_1.0.0_x64_en-US.msi
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.WINDOWS_BUILD_MSI_PATH }}/${{ env.WINDOWS_BUILD_MSI_NAME }}
          asset_name: ${{ env.WINDOWS_BUILD_MSI_NAME }}
          asset_content_type: application/x-ms-installer
      - name: Upload nsis image
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WINDOWS_BUILD_NSIS_PATH: ./src-tauri/target/release/bundle/nsis
          WINDOWS_BUILD_NSIS_NAME: Memories Calendar_1.0.0_x64-setup.exe
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.WINDOWS_BUILD_NSIS_PATH }}/${{ env.WINDOWS_BUILD_NSIS_NAME }}
          asset_name: ${{ env.WINDOWS_BUILD_NSIS_NAME }}
          asset_content_type: application/x-executable